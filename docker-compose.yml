version: "3.3"

services:
  # MySQL Database Service
  database:
    image: mysql:8.0
    container_name: meditrack_database
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-meditrack_root_password}
      MYSQL_DATABASE: ${DB_NAME:-meditrack_db}
      MYSQL_USER: ${DB_USER:-meditrack_user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-meditrack_password}
    ports:
      - "${DB_PORT:-3307}:3306"
    volumes:
      - database_data:/var/lib/mysql
      - ./api/src/database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "root",
          "-p${DB_ROOT_PASSWORD:-medcare_root_password}",
        ]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - meditrack_network
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password

  # Backend API Service
  backend:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: meditrack_backend
    ports:
      - "${API_PORT:-3001}:3001"
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=3001
      - DB_HOST=database
      - DB_PORT=3306
      - DB_USER=${DB_USER:-medcare_user}
      - DB_PASSWORD=${DB_PASSWORD:-medcare_password}
      - DB_NAME=${DB_NAME:-medcare_db}
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-change-in-production}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-7d}
      - FRONTEND_URL=${FRONTEND_URL:-http://192.168.200.160:3000}
    depends_on:
      - database
    volumes:
      - ./api:/app
      - /app/node_modules
    networks:
      - meditrack_network
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:3001/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Web Service
  frontend:
    build:
      context: ./web
      dockerfile: Dockerfile
    container_name: meditrack_frontend
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    environment:
      - REACT_APP_API_URL=${REACT_APP_API_URL:-http://192.168.200.160:3001/api/v1}
    depends_on:
      - backend
    networks:
      - meditrack_network
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:3000/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

# Named volumes for data persistence
volumes:
  database_data:
    driver: local

# Custom network for service communication
networks:
  meditrack_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16
